
AVRASM ver. 2.1.30  C:\term5\micropocessor\TA Session AVR\04 ADC\Software\List\program.asm Thu Jan 27 07:58:24 2022

C:\term5\micropocessor\TA Session AVR\04 ADC\Software\List\program.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\term5\micropocessor\TA Session AVR\04 ADC\Software\List\program.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\term5\micropocessor\TA Session AVR\04 ADC\Software\List\program.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004c 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 3d54
000034 3325
000035 312e
000036 0066      	.DB  0x54,0x3D,0x25,0x33,0x2E,0x31,0x66,0x0
000037 6f63
000038 6c6f
000039 7265
00003a 6f20      	.DB  0x63,0x6F,0x6F,0x6C,0x65,0x72,0x20,0x6F
00003b 006e
00003c 6f63
00003d 6c6f
00003e 7265      	.DB  0x6E,0x0,0x63,0x6F,0x6F,0x6C,0x65,0x72
00003f 6f20
000040 0066
000041 6568
000042 7461      	.DB  0x20,0x6F,0x66,0x0,0x68,0x65,0x61,0x74
000043 7265
000044 2020
000045 666f
000046 0066      	.DB  0x65,0x72,0x20,0x20,0x6F,0x66,0x66,0x0
                 _0x2000003:
000047 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000048 0002      	.DW  0x02
000049 0260      	.DW  __base_y_G100
00004a 008e      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
00004b 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00004c 94f8      	CLI
00004d 27ee      	CLR  R30
00004e bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004f e0f1      	LDI  R31,1
000050 bffb      	OUT  GICR,R31
000051 bfeb      	OUT  GICR,R30
000052 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000053 e1f8      	LDI  R31,0x18
000054 bdf1      	OUT  WDTCR,R31
000055 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000056 e08d      	LDI  R24,(14-2)+1
000057 e0a2      	LDI  R26,2
000058 27bb      	CLR  R27
                 __CLEAR_REG:
000059 93ed      	ST   X+,R30
00005a 958a      	DEC  R24
00005b f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005c e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005d e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005e e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005f 93ed      	ST   X+,R30
000060 9701      	SBIW R24,1
000061 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000062 e9e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000063 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000064 9185      	LPM  R24,Z+
000065 9195      	LPM  R25,Z+
000066 9700      	SBIW R24,0
000067 f061      	BREQ __GLOBAL_INI_END
000068 91a5      	LPM  R26,Z+
000069 91b5      	LPM  R27,Z+
00006a 9005      	LPM  R0,Z+
00006b 9015      	LPM  R1,Z+
00006c 01bf      	MOVW R22,R30
00006d 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006e 9005      	LPM  R0,Z+
00006f 920d      	ST   X+,R0
000070 9701      	SBIW R24,1
000071 f7e1      	BRNE __GLOBAL_INI_LOOP
000072 01fb      	MOVW R30,R22
000073 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000074 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000075 bfed      	OUT  SPL,R30
000076 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000077 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000078 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000079 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007a 940c 0089 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0009 {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 000A ADMUX=adc_input | ADC_VREF_TYPE;
00007c 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
00007d 81e8      	LD   R30,Y
00007e b9e7      	OUT  0x7,R30
                 ; 0000 000B delay_us(10);
                +
00007f e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000080 958a     +DEC R24
000081 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 000C ADCSRA|=(1<<ADSC);
000082 9a36      	SBI  0x6,6
                 ; 0000 000D while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
000083 9b34      	SBIS 0x6,4
000084 cffe      	RJMP _0x3
                 ; 0000 000E ADCSRA|=(1<<ADIF);
000085 9a34      	SBI  0x6,4
                 ; 0000 000F return ADCW;
000086 b1e4      	IN   R30,0x4
000087 b1f5      	IN   R31,0x4+1
000088 c17b      	RJMP _0x2080002
                 ; 0000 0010 }
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0013 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0014 int     i ;
                 ; 0000 0015 int     a , b ;
                 ; 0000 0016 float   Temperature ;
                 ; 0000 0017 char    Buffer_LCD[16];
                 ; 0000 0018 char heater;
                 ; 0000 0019 char cooler;
                 ; 0000 001A heater = 0;
000089 9766      	SBIW R28,22
                 ;	i -> R16,R17
                 ;	a -> R18,R19
                 ;	b -> R20,R21
                 ;	Temperature -> Y+18
                 ;	Buffer_LCD -> Y+2
                 ;	heater -> Y+1
                 ;	cooler -> Y+0
00008a e0e0      	LDI  R30,LOW(0)
00008b 83e9      	STD  Y+1,R30
                 ; 0000 001B cooler = 0;
00008c 83e8      	ST   Y,R30
                 ; 0000 001C 
                 ; 0000 001D DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
00008d bbea      	OUT  0x1A,R30
                 ; 0000 001E PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
00008e bbeb      	OUT  0x1B,R30
                 ; 0000 001F 
                 ; 0000 0020 DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
00008f efef      	LDI  R30,LOW(255)
000090 bbe1      	OUT  0x11,R30
                 ; 0000 0021 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000091 e0e0      	LDI  R30,LOW(0)
000092 bbe2      	OUT  0x12,R30
                 ; 0000 0022 
                 ; 0000 0023 ADMUX=ADC_VREF_TYPE;
000093 b9e7      	OUT  0x7,R30
                 ; 0000 0024 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (0<<ADPS0);
000094 e8e2      	LDI  R30,LOW(130)
000095 b9e6      	OUT  0x6,R30
                 ; 0000 0025 SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
000096 e0e0      	LDI  R30,LOW(0)
000097 bfe0      	OUT  0x30,R30
                 ; 0000 0026 
                 ; 0000 0027 lcd_init(16);
000098 e1a0      	LDI  R26,LOW(16)
000099 d13e      	RCALL _lcd_init
                 ; 0000 0028 lcd_clear();
00009a d0fa      	RCALL _lcd_clear
                 ; 0000 0029 
                 ; 0000 002A while (1)
                 _0x6:
                 ; 0000 002B {
                 ; 0000 002C 
                 ; 0000 002D 
                 ; 0000 002E       a=0;  b=0;
                +
00009b e020     +LDI R18 , LOW ( 0 )
00009c e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00009d e040     +LDI R20 , LOW ( 0 )
00009e e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 ; 0000 002F       for(i=1;i<=10;i++)
                +
00009f e001     +LDI R16 , LOW ( 1 )
0000a0 e010     +LDI R17 , HIGH ( 1 )
                 	__GETWRN 16,17,1
                 _0xA:
                +
0000a1 300b     +CPI R16 , LOW ( 11 )
0000a2 e0e0     +LDI R30 , HIGH ( 11 )
0000a3 071e     +CPC R17 , R30
                 	__CPWRN 16,17,11
0000a4 f45c      	BRGE _0xB
                 ; 0000 0030       {
                 ; 0000 0031       a=a+read_adc(0);
0000a5 e0a0      	LDI  R26,LOW(0)
0000a6 dfd5      	RCALL _read_adc
                +
0000a7 0f2e     +ADD R18 , R30
0000a8 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0000 0032       delay_ms(30);
0000a9 e1ae      	LDI  R26,LOW(30)
0000aa e0b0      	LDI  R27,0
0000ab 940e 0411 	CALL _delay_ms
                 ; 0000 0033       }
                +
0000ad 5f0f     +SUBI R16 , LOW ( - 1 )
0000ae 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0000af cff1      	RJMP _0xA
                 _0xB:
                 ; 0000 0034       b=a/10;
0000b0 01d9      	MOVW R26,R18
0000b1 e0ea      	LDI  R30,LOW(10)
0000b2 e0f0      	LDI  R31,HIGH(10)
0000b3 940e 0505 	CALL __DIVW21
0000b5 01af      	MOVW R20,R30
                 ; 0000 0035 
                 ; 0000 0036       Temperature=(b/2.054) ;
0000b6 940e 04ed 	CALL __CWD1
0000b8 940e 044a 	CALL __CDF1
0000ba 01df      	MOVW R26,R30
0000bb 01cb      	MOVW R24,R22
                +
0000bc ebec     +LDI R30 , LOW ( 0x400374BC )
0000bd e7f4     +LDI R31 , HIGH ( 0x400374BC )
0000be e063     +LDI R22 , BYTE3 ( 0x400374BC )
0000bf e470     +LDI R23 , BYTE4 ( 0x400374BC )
                 	__GETD1N 0x400374BC
0000c0 940e 0478 	CALL __DIVF21
                +
0000c2 8bea     +STD Y + 18 , R30
0000c3 8bfb     +STD Y + 18 + 1 , R31
0000c4 8b6c     +STD Y + 18 + 2 , R22
0000c5 8b7d     +STD Y + 18 + 3 , R23
                 	__PUTD1S 18
                 ; 0000 0037       sprintf(Buffer_LCD,"T=%3.1f",Temperature);
0000c6 01fe      	MOVW R30,R28
0000c7 9632      	ADIW R30,2
0000c8 93fa      	ST   -Y,R31
0000c9 93ea      	ST   -Y,R30
                +
0000ca e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000cb e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000cc 93fa      	ST   -Y,R31
0000cd 93ea      	ST   -Y,R30
                +
0000ce 89ee     +LDD R30 , Y + 22
0000cf 89ff     +LDD R31 , Y + 22 + 1
0000d0 8d68     +LDD R22 , Y + 22 + 2
0000d1 8d79     +LDD R23 , Y + 22 + 3
                 	__GETD1S 22
0000d2 940e 0520 	CALL __PUTPARD1
0000d4 e084      	LDI  R24,4
0000d5 940e 037a 	CALL _sprintf
0000d7 9628      	ADIW R28,8
                 ; 0000 0038       lcd_gotoxy(0,0);
0000d8 e0e0      	LDI  R30,LOW(0)
0000d9 93ea      	ST   -Y,R30
0000da e0a0      	LDI  R26,LOW(0)
0000db d0ac      	RCALL _lcd_gotoxy
                 ; 0000 0039       lcd_puts(Buffer_LCD);
0000dc 01de      	MOVW R26,R28
0000dd 9612      	ADIW R26,2
0000de d0d7      	RCALL _lcd_puts
                 ; 0000 003A       lcd_gotoxy(7,0);
0000df e0e7      	LDI  R30,LOW(7)
0000e0 93ea      	ST   -Y,R30
0000e1 e0a0      	LDI  R26,LOW(0)
0000e2 d0a5      	RCALL _lcd_gotoxy
                 ; 0000 003B 
                 ; 0000 003C       if(cooler == 0 && heater == 0 &&  Temperature < 15 )
0000e3 81a8      	LD   R26,Y
0000e4 30a0      	CPI  R26,LOW(0x0)
0000e5 f461      	BRNE _0xD
0000e6 81a9      	LDD  R26,Y+1
0000e7 30a0      	CPI  R26,LOW(0x0)
0000e8 f449      	BRNE _0xD
0000e9 940e 03c7 	CALL SUBOPT_0x0
                +
0000eb e0e0     +LDI R30 , LOW ( 0x41700000 )
0000ec e0f0     +LDI R31 , HIGH ( 0x41700000 )
0000ed e760     +LDI R22 , BYTE3 ( 0x41700000 )
0000ee e471     +LDI R23 , BYTE4 ( 0x41700000 )
                 	__GETD1N 0x41700000
0000ef 940e 04bd 	CALL __CMPF12
0000f1 f008      	BRLO _0xE
                 _0xD:
0000f2 c003      	RJMP _0xC
                 _0xE:
                 ; 0000 003D       {
                 ; 0000 003E       heater = 1;
0000f3 e0e1      	LDI  R30,LOW(1)
0000f4 83e9      	STD  Y+1,R30
                 ; 0000 003F       }
                 ; 0000 0040 
                 ; 0000 0041       else if(cooler == 0 && heater == 0 &&  Temperature > 35  )
0000f5 c052      	RJMP _0xF
                 _0xC:
0000f6 81a8      	LD   R26,Y
0000f7 30a0      	CPI  R26,LOW(0x0)
0000f8 f479      	BRNE _0x11
0000f9 81a9      	LDD  R26,Y+1
0000fa 30a0      	CPI  R26,LOW(0x0)
0000fb f461      	BRNE _0x11
0000fc 940e 03c7 	CALL SUBOPT_0x0
                +
0000fe e0e0     +LDI R30 , LOW ( 0x420C0000 )
0000ff e0f0     +LDI R31 , HIGH ( 0x420C0000 )
000100 e06c     +LDI R22 , BYTE3 ( 0x420C0000 )
000101 e472     +LDI R23 , BYTE4 ( 0x420C0000 )
                 	__GETD1N 0x420C0000
000102 940e 04bd 	CALL __CMPF12
000104 f009      	BREQ PC+2
000105 f408      	BRCC PC+2
000106 c001      	RJMP _0x11
000107 c001      	RJMP _0x12
                 _0x11:
000108 c007      	RJMP _0x10
                 _0x12:
                 ; 0000 0042       {
                 ; 0000 0043         cooler = 1;
000109 e0e1      	LDI  R30,LOW(1)
00010a 940e 03cc 	CALL SUBOPT_0x1
                 ; 0000 0044         lcd_gotoxy(1,1);
                 ; 0000 0045         lcd_putsf("cooler on");
                +
00010c e6ae     +LDI R26 , LOW ( 2 * _0x0 + ( 8 ) )
00010d e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW2FN _0x0,8
00010e d0b6      	RCALL _lcd_putsf
                 ; 0000 0046       }
                 ; 0000 0047 
                 ; 0000 0048 
                 ; 0000 0049       else if(cooler &&  heater == 0 && Temperature< 25 )
00010f c038      	RJMP _0x13
                 _0x10:
000110 81e8      	LD   R30,Y
000111 30e0      	CPI  R30,0
000112 f061      	BREQ _0x15
000113 81a9      	LDD  R26,Y+1
000114 30a0      	CPI  R26,LOW(0x0)
000115 f449      	BRNE _0x15
000116 940e 03c7 	CALL SUBOPT_0x0
                +
000118 e0e0     +LDI R30 , LOW ( 0x41C80000 )
000119 e0f0     +LDI R31 , HIGH ( 0x41C80000 )
00011a ec68     +LDI R22 , BYTE3 ( 0x41C80000 )
00011b e471     +LDI R23 , BYTE4 ( 0x41C80000 )
                 	__GETD1N 0x41C80000
00011c 940e 04bd 	CALL __CMPF12
00011e f008      	BRLO _0x16
                 _0x15:
00011f c007      	RJMP _0x14
                 _0x16:
                 ; 0000 004A       {
                 ; 0000 004B        cooler = 0 ;
000120 e0e0      	LDI  R30,LOW(0)
000121 940e 03cc 	CALL SUBOPT_0x1
                 ; 0000 004C        lcd_gotoxy(1,1);
                 ; 0000 004D         lcd_putsf("cooler of");
                +
000123 e7a8     +LDI R26 , LOW ( 2 * _0x0 + ( 18 ) )
000124 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 18 ) )
                 	__POINTW2FN _0x0,18
000125 d09f      	RCALL _lcd_putsf
                 ; 0000 004E 
                 ; 0000 004F       }
                 ; 0000 0050 
                 ; 0000 0051       else if(!cooler && heater &&  Temperature> 30 )
000126 c021      	RJMP _0x17
                 _0x14:
000127 81e8      	LD   R30,Y
000128 30e0      	CPI  R30,0
000129 f479      	BRNE _0x19
00012a 81e9      	LDD  R30,Y+1
00012b 30e0      	CPI  R30,0
00012c f061      	BREQ _0x19
00012d 940e 03c7 	CALL SUBOPT_0x0
                +
00012f e0e0     +LDI R30 , LOW ( 0x41F00000 )
000130 e0f0     +LDI R31 , HIGH ( 0x41F00000 )
000131 ef60     +LDI R22 , BYTE3 ( 0x41F00000 )
000132 e471     +LDI R23 , BYTE4 ( 0x41F00000 )
                 	__GETD1N 0x41F00000
000133 940e 04bd 	CALL __CMPF12
000135 f009      	BREQ PC+2
000136 f408      	BRCC PC+2
000137 c001      	RJMP _0x19
000138 c001      	RJMP _0x1A
                 _0x19:
000139 c00a      	RJMP _0x18
                 _0x1A:
                 ; 0000 0052       {
                 ; 0000 0053 
                 ; 0000 0054         heater = 0;
00013a e0e0      	LDI  R30,LOW(0)
00013b 83e9      	STD  Y+1,R30
                 ; 0000 0055         lcd_gotoxy(1,1);
00013c e0e1      	LDI  R30,LOW(1)
00013d 93ea      	ST   -Y,R30
00013e e0a1      	LDI  R26,LOW(1)
00013f d048      	RCALL _lcd_gotoxy
                 ; 0000 0056         lcd_putsf("heater  off");
                +
000140 e8a2     +LDI R26 , LOW ( 2 * _0x0 + ( 28 ) )
000141 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 28 ) )
                 	__POINTW2FN _0x0,28
000142 d082      	RCALL _lcd_putsf
                 ; 0000 0057 
                 ; 0000 0058       }
                 ; 0000 0059 
                 ; 0000 005A       else
000143 c004      	RJMP _0x1B
                 _0x18:
                 ; 0000 005B       {
                 ; 0000 005C         heater = heater;
000144 81e9      	LDD  R30,Y+1
000145 83e9      	STD  Y+1,R30
                 ; 0000 005D         cooler = cooler ;
000146 81e8      	LD   R30,Y
000147 83e8      	ST   Y,R30
                 ; 0000 005E       }
                 _0x1B:
                 _0x17:
                 _0x13:
                 _0xF:
                 ; 0000 005F 
                 ; 0000 0060       if (heater == 1)
000148 81a9      	LDD  R26,Y+1
000149 30a1      	CPI  R26,LOW(0x1)
00014a f461      	BRNE _0x1C
                 ; 0000 0061       {
                 ; 0000 0062             PORTD = 9 <<4 ;
00014b e9e0      	LDI  R30,LOW(144)
00014c 940e 03d2 	CALL SUBOPT_0x2
                 ; 0000 0063             delay_ms(35) ;
                 ; 0000 0064             PORTD = 12 <<4;
00014e ece0      	LDI  R30,LOW(192)
00014f 940e 03d2 	CALL SUBOPT_0x2
                 ; 0000 0065             delay_ms(35);
                 ; 0000 0066             PORTD = 6 <<4 ;
000151 e6e0      	LDI  R30,LOW(96)
000152 940e 03d2 	CALL SUBOPT_0x2
                 ; 0000 0067             delay_ms(35);
                 ; 0000 0068             PORTD = 3 <<4 ;
000154 e3e0      	LDI  R30,LOW(48)
000155 940e 03d2 	CALL SUBOPT_0x2
                 ; 0000 0069             delay_ms(35);
                 ; 0000 006A       }
                 ; 0000 006B 
                 ; 0000 006C        if(cooler == 1)
                 _0x1C:
000157 81a8      	LD   R26,Y
000158 30a1      	CPI  R26,LOW(0x1)
000159 f461      	BRNE _0x1D
                 ; 0000 006D       {
                 ; 0000 006E         PORTD = 9;
00015a e0e9      	LDI  R30,LOW(9)
00015b 940e 03d2 	CALL SUBOPT_0x2
                 ; 0000 006F         delay_ms(35) ;
                 ; 0000 0070         PORTD = 12;
00015d e0ec      	LDI  R30,LOW(12)
00015e 940e 03d2 	CALL SUBOPT_0x2
                 ; 0000 0071         delay_ms(35);
                 ; 0000 0072         PORTD = 6 ;
000160 e0e6      	LDI  R30,LOW(6)
000161 940e 03d2 	CALL SUBOPT_0x2
                 ; 0000 0073         delay_ms(35);
                 ; 0000 0074         PORTD = 3  ;
000163 e0e3      	LDI  R30,LOW(3)
000164 940e 03d2 	CALL SUBOPT_0x2
                 ; 0000 0075         delay_ms(35);
                 ; 0000 0076 
                 ; 0000 0077 
                 ; 0000 0078       }
                 ; 0000 0079 
                 ; 0000 007A }
                 _0x1D:
000166 cf34      	RJMP _0x6
                 ; 0000 007B 
                 ; 0000 007C }
                 _0x1E:
000167 cfff      	RJMP _0x1E
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000168 93aa      	ST   -Y,R26
000169 b3e5      	IN   R30,0x15
00016a 70ef      	ANDI R30,LOW(0xF)
00016b 2fae      	MOV  R26,R30
00016c 81e8      	LD   R30,Y
00016d 7fe0      	ANDI R30,LOW(0xF0)
00016e 2bea      	OR   R30,R26
00016f bbe5      	OUT  0x15,R30
                +
000170 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000171 958a     +DEC R24
000172 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000173 9aaa      	SBI  0x15,2
                +
000174 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000175 958a     +DEC R24
000176 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000177 98aa      	CBI  0x15,2
                +
000178 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000179 958a     +DEC R24
00017a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00017b c088      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00017c 93aa      	ST   -Y,R26
00017d 81a8      	LD   R26,Y
00017e dfe9      	RCALL __lcd_write_nibble_G100
00017f 81e8          ld    r30,y
000180 95e2          swap  r30
000181 83e8          st    y,r30
000182 81a8      	LD   R26,Y
000183 dfe4      	RCALL __lcd_write_nibble_G100
                +
000184 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000185 958a     +DEC R24
000186 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000187 c07c      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000188 93aa      	ST   -Y,R26
000189 81e8      	LD   R30,Y
00018a e0f0      	LDI  R31,0
00018b 5ae0      	SUBI R30,LOW(-__base_y_G100)
00018c 4ffd      	SBCI R31,HIGH(-__base_y_G100)
00018d 81e0      	LD   R30,Z
00018e 81a9      	LDD  R26,Y+1
00018f 0fae      	ADD  R26,R30
000190 dfeb      	RCALL __lcd_write_data
000191 8059      	LDD  R5,Y+1
000192 8048      	LDD  R4,Y+0
000193 9622      	ADIW R28,2
000194 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000195 e0a2      	LDI  R26,LOW(2)
000196 940e 03d7 	CALL SUBOPT_0x3
000198 e0ac      	LDI  R26,LOW(12)
000199 dfe2      	RCALL __lcd_write_data
00019a e0a1      	LDI  R26,LOW(1)
00019b 940e 03d7 	CALL SUBOPT_0x3
00019d e0e0      	LDI  R30,LOW(0)
00019e 2e4e      	MOV  R4,R30
00019f 2e5e      	MOV  R5,R30
0001a0 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0001a1 93aa      	ST   -Y,R26
0001a2 81a8      	LD   R26,Y
0001a3 30aa      	CPI  R26,LOW(0xA)
0001a4 f011      	BREQ _0x2000005
0001a5 1457      	CP   R5,R7
0001a6 f048      	BRLO _0x2000004
                 _0x2000005:
0001a7 e0e0      	LDI  R30,LOW(0)
0001a8 93ea      	ST   -Y,R30
0001a9 9443      	INC  R4
0001aa 2da4      	MOV  R26,R4
0001ab dfdc      	RCALL _lcd_gotoxy
0001ac 81a8      	LD   R26,Y
0001ad 30aa      	CPI  R26,LOW(0xA)
0001ae f409      	BRNE _0x2000007
0001af c054      	RJMP _0x2080002
                 _0x2000007:
                 _0x2000004:
0001b0 9453      	INC  R5
0001b1 9aa8      	SBI  0x15,0
0001b2 81a8      	LD   R26,Y
0001b3 dfc8      	RCALL __lcd_write_data
0001b4 98a8      	CBI  0x15,0
0001b5 c04e      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0001b6 93ba      	ST   -Y,R27
0001b7 93aa      	ST   -Y,R26
0001b8 931a      	ST   -Y,R17
                 _0x2000008:
0001b9 81a9      	LDD  R26,Y+1
0001ba 81ba      	LDD  R27,Y+1+1
0001bb 91ed      	LD   R30,X+
0001bc 83a9      	STD  Y+1,R26
0001bd 83ba      	STD  Y+1+1,R27
0001be 2f1e      	MOV  R17,R30
0001bf 30e0      	CPI  R30,0
0001c0 f019      	BREQ _0x200000A
0001c1 2fa1      	MOV  R26,R17
0001c2 dfde      	RCALL _lcd_putchar
0001c3 cff5      	RJMP _0x2000008
                 _0x200000A:
0001c4 c010      	RJMP _0x2080003
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
0001c5 93ba      	ST   -Y,R27
0001c6 93aa      	ST   -Y,R26
0001c7 931a      	ST   -Y,R17
                 _0x200000B:
0001c8 81e9      	LDD  R30,Y+1
0001c9 81fa      	LDD  R31,Y+1+1
0001ca 9631      	ADIW R30,1
0001cb 83e9      	STD  Y+1,R30
0001cc 83fa      	STD  Y+1+1,R31
0001cd 9731      	SBIW R30,1
0001ce 91e4      	LPM  R30,Z
0001cf 2f1e      	MOV  R17,R30
0001d0 30e0      	CPI  R30,0
0001d1 f019      	BREQ _0x200000D
0001d2 2fa1      	MOV  R26,R17
0001d3 dfcd      	RCALL _lcd_putchar
0001d4 cff3      	RJMP _0x200000B
                 _0x200000D:
                 _0x2080003:
0001d5 8118      	LDD  R17,Y+0
0001d6 9623      	ADIW R28,3
0001d7 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0001d8 93aa      	ST   -Y,R26
0001d9 b3e4      	IN   R30,0x14
0001da 6fe0      	ORI  R30,LOW(0xF0)
0001db bbe4      	OUT  0x14,R30
0001dc 9aa2      	SBI  0x14,2
0001dd 9aa0      	SBI  0x14,0
0001de 9aa1      	SBI  0x14,1
0001df 98aa      	CBI  0x15,2
0001e0 98a8      	CBI  0x15,0
0001e1 98a9      	CBI  0x15,1
0001e2 8078      	LDD  R7,Y+0
0001e3 81e8      	LD   R30,Y
0001e4 58e0      	SUBI R30,-LOW(128)
                +
0001e5 93e0 0262+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0001e7 81e8      	LD   R30,Y
0001e8 54e0      	SUBI R30,-LOW(192)
                +
0001e9 93e0 0263+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0001eb e1a4      	LDI  R26,LOW(20)
0001ec e0b0      	LDI  R27,0
0001ed 940e 0411 	CALL _delay_ms
0001ef 940e 03dd 	CALL SUBOPT_0x4
0001f1 940e 03dd 	CALL SUBOPT_0x4
0001f3 940e 03dd 	CALL SUBOPT_0x4
0001f5 e2a0      	LDI  R26,LOW(32)
0001f6 df71      	RCALL __lcd_write_nibble_G100
                +
0001f7 ec88     +LDI R24 , LOW ( 200 )
0001f8 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0001f9 9701     +SBIW R24 , 1
0001fa f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0001fb e2a8      	LDI  R26,LOW(40)
0001fc df7f      	RCALL __lcd_write_data
0001fd e0a4      	LDI  R26,LOW(4)
0001fe df7d      	RCALL __lcd_write_data
0001ff e8a5      	LDI  R26,LOW(133)
000200 df7b      	RCALL __lcd_write_data
000201 e0a6      	LDI  R26,LOW(6)
000202 df79      	RCALL __lcd_write_data
000203 df91      	RCALL _lcd_clear
                 _0x2080002:
000204 9621      	ADIW R28,1
000205 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000206 93ba      	ST   -Y,R27
000207 93aa      	ST   -Y,R26
000208 931a      	ST   -Y,R17
000209 930a      	ST   -Y,R16
00020a 81aa      	LDD  R26,Y+2
00020b 81bb      	LDD  R27,Y+2+1
00020c 9612      	ADIW R26,2
00020d 940e 0518 	CALL __GETW1P
00020f 9730      	SBIW R30,0
000210 f159      	BREQ _0x2020010
000211 81aa      	LDD  R26,Y+2
000212 81bb      	LDD  R27,Y+2+1
000213 9614      	ADIW R26,4
000214 940e 0518 	CALL __GETW1P
000216 018f      	MOVW R16,R30
000217 9730      	SBIW R30,0
000218 f061      	BREQ _0x2020012
                +
000219 3002     +CPI R16 , LOW ( 2 )
00021a e0e0     +LDI R30 , HIGH ( 2 )
00021b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00021c f098      	BRLO _0x2020013
00021d 01f8      	MOVW R30,R16
00021e 9731      	SBIW R30,1
00021f 018f      	MOVW R16,R30
                +
000220 81aa     +LDD R26 , Y + 2
000221 81bb     +LDD R27 , Y + 2 + 1
000222 9614     +ADIW R26 , 4
000223 93ed     +ST X + , R30
000224 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
000225 81aa      	LDD  R26,Y+2
000226 81bb      	LDD  R27,Y+2+1
000227 9612      	ADIW R26,2
000228 91ed      	LD   R30,X+
000229 91fd      	LD   R31,X+
00022a 9631      	ADIW R30,1
00022b 93fe      	ST   -X,R31
00022c 93ee      	ST   -X,R30
00022d 9731      	SBIW R30,1
00022e 81ac      	LDD  R26,Y+4
00022f 83a0      	STD  Z+0,R26
                 _0x2020013:
000230 81aa      	LDD  R26,Y+2
000231 81bb      	LDD  R27,Y+2+1
000232 940e 0518 	CALL __GETW1P
000234 23ff      	TST  R31
000235 f02a      	BRMI _0x2020014
000236 91ed      	LD   R30,X+
000237 91fd      	LD   R31,X+
000238 9631      	ADIW R30,1
000239 93fe      	ST   -X,R31
00023a 93ee      	ST   -X,R30
                 _0x2020014:
00023b c006      	RJMP _0x2020015
                 _0x2020010:
00023c 81aa      	LDD  R26,Y+2
00023d 81bb      	LDD  R27,Y+2+1
00023e efef      	LDI  R30,LOW(65535)
00023f efff      	LDI  R31,HIGH(65535)
000240 93ed      	ST   X+,R30
000241 93fc      	ST   X,R31
                 _0x2020015:
000242 8119      	LDD  R17,Y+1
000243 8108      	LDD  R16,Y+0
000244 9625      	ADIW R28,5
000245 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
000246 93ba      	ST   -Y,R27
000247 93aa      	ST   -Y,R26
000248 9726      	SBIW R28,6
000249 940e 0525 	CALL __SAVELOCR6
00024b e010      	LDI  R17,0
00024c 85ac      	LDD  R26,Y+12
00024d 85bd      	LDD  R27,Y+12+1
00024e e0e0      	LDI  R30,LOW(0)
00024f e0f0      	LDI  R31,HIGH(0)
000250 93ed      	ST   X+,R30
000251 93fc      	ST   X,R31
                 _0x2020016:
000252 89ea      	LDD  R30,Y+18
000253 89fb      	LDD  R31,Y+18+1
000254 9631      	ADIW R30,1
000255 8bea      	STD  Y+18,R30
000256 8bfb      	STD  Y+18+1,R31
000257 9731      	SBIW R30,1
000258 91e4      	LPM  R30,Z
000259 2f2e      	MOV  R18,R30
00025a 30e0      	CPI  R30,0
00025b f409      	BRNE PC+2
00025c c115      	RJMP _0x2020018
00025d 2fe1      	MOV  R30,R17
00025e 30e0      	CPI  R30,0
00025f f439      	BRNE _0x202001C
000260 3225      	CPI  R18,37
000261 f411      	BRNE _0x202001D
000262 e011      	LDI  R17,LOW(1)
000263 c002      	RJMP _0x202001E
                 _0x202001D:
000264 940e 03e5 	CALL SUBOPT_0x5
                 _0x202001E:
000266 c10a      	RJMP _0x202001B
                 _0x202001C:
000267 30e1      	CPI  R30,LOW(0x1)
000268 f4a9      	BRNE _0x202001F
000269 3225      	CPI  R18,37
00026a f419      	BRNE _0x2020020
00026b 940e 03e5 	CALL SUBOPT_0x5
00026d c102      	RJMP _0x20200CC
                 _0x2020020:
00026e e012      	LDI  R17,LOW(2)
00026f e040      	LDI  R20,LOW(0)
000270 e000      	LDI  R16,LOW(0)
000271 322d      	CPI  R18,45
000272 f411      	BRNE _0x2020021
000273 e001      	LDI  R16,LOW(1)
000274 c0fc      	RJMP _0x202001B
                 _0x2020021:
000275 322b      	CPI  R18,43
000276 f411      	BRNE _0x2020022
000277 e24b      	LDI  R20,LOW(43)
000278 c0f8      	RJMP _0x202001B
                 _0x2020022:
000279 3220      	CPI  R18,32
00027a f411      	BRNE _0x2020023
00027b e240      	LDI  R20,LOW(32)
00027c c0f4      	RJMP _0x202001B
                 _0x2020023:
00027d c002      	RJMP _0x2020024
                 _0x202001F:
00027e 30e2      	CPI  R30,LOW(0x2)
00027f f439      	BRNE _0x2020025
                 _0x2020024:
000280 e050      	LDI  R21,LOW(0)
000281 e013      	LDI  R17,LOW(3)
000282 3320      	CPI  R18,48
000283 f411      	BRNE _0x2020026
000284 6800      	ORI  R16,LOW(128)
000285 c0eb      	RJMP _0x202001B
                 _0x2020026:
000286 c003      	RJMP _0x2020027
                 _0x2020025:
000287 30e3      	CPI  R30,LOW(0x3)
000288 f009      	BREQ PC+2
000289 c0e7      	RJMP _0x202001B
                 _0x2020027:
00028a 3320      	CPI  R18,48
00028b f010      	BRLO _0x202002A
00028c 332a      	CPI  R18,58
00028d f008      	BRLO _0x202002B
                 _0x202002A:
00028e c007      	RJMP _0x2020029
                 _0x202002B:
00028f e0aa      	LDI  R26,LOW(10)
000290 9f5a      	MUL  R21,R26
000291 2d50      	MOV  R21,R0
000292 2fe2      	MOV  R30,R18
000293 53e0      	SUBI R30,LOW(48)
000294 0f5e      	ADD  R21,R30
000295 c0db      	RJMP _0x202001B
                 _0x2020029:
000296 2fe2      	MOV  R30,R18
000297 36e3      	CPI  R30,LOW(0x63)
000298 f449      	BRNE _0x202002F
000299 940e 03ec 	CALL SUBOPT_0x6
00029b 89e8      	LDD  R30,Y+16
00029c 89f9      	LDD  R31,Y+16+1
00029d 81a4      	LDD  R26,Z+4
00029e 93aa      	ST   -Y,R26
00029f 940e 03f2 	CALL SUBOPT_0x7
0002a1 c0ce      	RJMP _0x2020030
                 _0x202002F:
0002a2 37e3      	CPI  R30,LOW(0x73)
0002a3 f441      	BRNE _0x2020032
0002a4 940e 03ec 	CALL SUBOPT_0x6
0002a6 940e 03f8 	CALL SUBOPT_0x8
0002a8 940e 03ae 	CALL _strlen
0002aa 2f1e      	MOV  R17,R30
0002ab c00a      	RJMP _0x2020033
                 _0x2020032:
0002ac 37e0      	CPI  R30,LOW(0x70)
0002ad f461      	BRNE _0x2020035
0002ae 940e 03ec 	CALL SUBOPT_0x6
0002b0 940e 03f8 	CALL SUBOPT_0x8
0002b2 940e 03ba 	CALL _strlenf
0002b4 2f1e      	MOV  R17,R30
0002b5 6008      	ORI  R16,LOW(8)
                 _0x2020033:
0002b6 6002      	ORI  R16,LOW(2)
0002b7 770f      	ANDI R16,LOW(127)
0002b8 e030      	LDI  R19,LOW(0)
0002b9 c034      	RJMP _0x2020036
                 _0x2020035:
0002ba 36e4      	CPI  R30,LOW(0x64)
0002bb f011      	BREQ _0x2020039
0002bc 36e9      	CPI  R30,LOW(0x69)
0002bd f411      	BRNE _0x202003A
                 _0x2020039:
0002be 6004      	ORI  R16,LOW(4)
0002bf c002      	RJMP _0x202003B
                 _0x202003A:
0002c0 37e5      	CPI  R30,LOW(0x75)
0002c1 f431      	BRNE _0x202003C
                 _0x202003B:
0002c2 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
0002c3 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
0002c4 83ee      	STD  Y+6,R30
0002c5 83ff      	STD  Y+6+1,R31
0002c6 e015      	LDI  R17,LOW(5)
0002c7 c00c      	RJMP _0x202003D
                 _0x202003C:
0002c8 35e8      	CPI  R30,LOW(0x58)
0002c9 f411      	BRNE _0x202003F
0002ca 6008      	ORI  R16,LOW(8)
0002cb c003      	RJMP _0x2020040
                 _0x202003F:
0002cc 37e8      	CPI  R30,LOW(0x78)
0002cd f009      	BREQ PC+2
0002ce c0a1      	RJMP _0x2020071
                 _0x2020040:
0002cf e5ee      	LDI  R30,LOW(_tbl16_G101*2)
0002d0 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
0002d1 83ee      	STD  Y+6,R30
0002d2 83ff      	STD  Y+6+1,R31
0002d3 e014      	LDI  R17,LOW(4)
                 _0x202003D:
0002d4 ff02      	SBRS R16,2
0002d5 c014      	RJMP _0x2020042
0002d6 940e 03ec 	CALL SUBOPT_0x6
0002d8 940e 0402 	CALL SUBOPT_0x9
0002da 85ab      	LDD  R26,Y+11
0002db 23aa      	TST  R26
0002dc f43a      	BRPL _0x2020043
0002dd 85ea      	LDD  R30,Y+10
0002de 85fb      	LDD  R31,Y+10+1
0002df 940e 04e1 	CALL __ANEGW1
0002e1 87ea      	STD  Y+10,R30
0002e2 87fb      	STD  Y+10+1,R31
0002e3 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
0002e4 3040      	CPI  R20,0
0002e5 f011      	BREQ _0x2020044
0002e6 5f1f      	SUBI R17,-LOW(1)
0002e7 c001      	RJMP _0x2020045
                 _0x2020044:
0002e8 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
0002e9 c004      	RJMP _0x2020046
                 _0x2020042:
0002ea 940e 03ec 	CALL SUBOPT_0x6
0002ec 940e 0402 	CALL SUBOPT_0x9
                 _0x2020046:
                 _0x2020036:
0002ee fd00      	SBRC R16,0
0002ef c011      	RJMP _0x2020047
                 _0x2020048:
0002f0 1715      	CP   R17,R21
0002f1 f478      	BRSH _0x202004A
0002f2 ff07      	SBRS R16,7
0002f3 c008      	RJMP _0x202004B
0002f4 ff02      	SBRS R16,2
0002f5 c004      	RJMP _0x202004C
0002f6 7f0b      	ANDI R16,LOW(251)
0002f7 2f24      	MOV  R18,R20
0002f8 5011      	SUBI R17,LOW(1)
0002f9 c001      	RJMP _0x202004D
                 _0x202004C:
0002fa e320      	LDI  R18,LOW(48)
                 _0x202004D:
0002fb c001      	RJMP _0x202004E
                 _0x202004B:
0002fc e220      	LDI  R18,LOW(32)
                 _0x202004E:
0002fd 940e 03e5 	CALL SUBOPT_0x5
0002ff 5051      	SUBI R21,LOW(1)
000300 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000301 2f31      	MOV  R19,R17
000302 ff01      	SBRS R16,1
000303 c017      	RJMP _0x202004F
                 _0x2020050:
000304 3030      	CPI  R19,0
000305 f0a1      	BREQ _0x2020052
000306 ff03      	SBRS R16,3
000307 c006      	RJMP _0x2020053
000308 81ee      	LDD  R30,Y+6
000309 81ff      	LDD  R31,Y+6+1
00030a 9125      	LPM  R18,Z+
00030b 83ee      	STD  Y+6,R30
00030c 83ff      	STD  Y+6+1,R31
00030d c005      	RJMP _0x2020054
                 _0x2020053:
00030e 81ae      	LDD  R26,Y+6
00030f 81bf      	LDD  R27,Y+6+1
000310 912d      	LD   R18,X+
000311 83ae      	STD  Y+6,R26
000312 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000313 940e 03e5 	CALL SUBOPT_0x5
000315 3050      	CPI  R21,0
000316 f009      	BREQ _0x2020055
000317 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000318 5031      	SUBI R19,LOW(1)
000319 cfea      	RJMP _0x2020050
                 _0x2020052:
00031a c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
00031b e320      	LDI  R18,LOW(48)
00031c 81ee      	LDD  R30,Y+6
00031d 81ff      	LDD  R31,Y+6+1
00031e 940e 051c 	CALL __GETW1PF
000320 87e8      	STD  Y+8,R30
000321 87f9      	STD  Y+8+1,R31
000322 81ee      	LDD  R30,Y+6
000323 81ff      	LDD  R31,Y+6+1
000324 9632      	ADIW R30,2
000325 83ee      	STD  Y+6,R30
000326 83ff      	STD  Y+6+1,R31
                 _0x202005A:
000327 85e8      	LDD  R30,Y+8
000328 85f9      	LDD  R31,Y+8+1
000329 85aa      	LDD  R26,Y+10
00032a 85bb      	LDD  R27,Y+10+1
00032b 17ae      	CP   R26,R30
00032c 07bf      	CPC  R27,R31
00032d f050      	BRLO _0x202005C
00032e 5f2f      	SUBI R18,-LOW(1)
00032f 85a8      	LDD  R26,Y+8
000330 85b9      	LDD  R27,Y+8+1
000331 85ea      	LDD  R30,Y+10
000332 85fb      	LDD  R31,Y+10+1
000333 1bea      	SUB  R30,R26
000334 0bfb      	SBC  R31,R27
000335 87ea      	STD  Y+10,R30
000336 87fb      	STD  Y+10+1,R31
000337 cfef      	RJMP _0x202005A
                 _0x202005C:
000338 332a      	CPI  R18,58
000339 f028      	BRLO _0x202005D
00033a ff03      	SBRS R16,3
00033b c002      	RJMP _0x202005E
00033c 5f29      	SUBI R18,-LOW(7)
00033d c001      	RJMP _0x202005F
                 _0x202005E:
00033e 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
00033f fd04      	SBRC R16,4
000340 c01a      	RJMP _0x2020061
000341 3321      	CPI  R18,49
000342 f420      	BRSH _0x2020063
000343 85a8      	LDD  R26,Y+8
000344 85b9      	LDD  R27,Y+8+1
000345 9711      	SBIW R26,1
000346 f409      	BRNE _0x2020062
                 _0x2020063:
000347 c009      	RJMP _0x20200CD
                 _0x2020062:
000348 1753      	CP   R21,R19
000349 f010      	BRLO _0x2020067
00034a ff00      	SBRS R16,0
00034b c001      	RJMP _0x2020068
                 _0x2020067:
00034c c013      	RJMP _0x2020066
                 _0x2020068:
00034d e220      	LDI  R18,LOW(32)
00034e ff07      	SBRS R16,7
00034f c00b      	RJMP _0x2020069
000350 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
000351 6100      	ORI  R16,LOW(16)
000352 ff02      	SBRS R16,2
000353 c007      	RJMP _0x202006A
000354 7f0b      	ANDI R16,LOW(251)
000355 934a      	ST   -Y,R20
000356 940e 03f2 	CALL SUBOPT_0x7
000358 3050      	CPI  R21,0
000359 f009      	BREQ _0x202006B
00035a 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
00035b 940e 03e5 	CALL SUBOPT_0x5
00035d 3050      	CPI  R21,0
00035e f009      	BREQ _0x202006C
00035f 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000360 5031      	SUBI R19,LOW(1)
000361 85a8      	LDD  R26,Y+8
000362 85b9      	LDD  R27,Y+8+1
000363 9712      	SBIW R26,2
000364 f008      	BRLO _0x2020059
000365 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
000366 ff00      	SBRS R16,0
000367 c008      	RJMP _0x202006D
                 _0x202006E:
000368 3050      	CPI  R21,0
000369 f031      	BREQ _0x2020070
00036a 5051      	SUBI R21,LOW(1)
00036b e2e0      	LDI  R30,LOW(32)
00036c 93ea      	ST   -Y,R30
00036d 940e 03f2 	CALL SUBOPT_0x7
00036f cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
000370 e010      	LDI  R17,LOW(0)
                 _0x202001B:
000371 cee0      	RJMP _0x2020016
                 _0x2020018:
000372 85ac      	LDD  R26,Y+12
000373 85bd      	LDD  R27,Y+12+1
000374 940e 0518 	CALL __GETW1P
000376 940e 052c 	CALL __LOADLOCR6
000378 9664      	ADIW R28,20
000379 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00037a 92ff      	PUSH R15
00037b 2ef8      	MOV  R15,R24
00037c 9726      	SBIW R28,6
00037d 940e 0527 	CALL __SAVELOCR4
00037f 940e 040a 	CALL SUBOPT_0xA
000381 9730      	SBIW R30,0
000382 f419      	BRNE _0x2020072
000383 efef      	LDI  R30,LOW(65535)
000384 efff      	LDI  R31,HIGH(65535)
000385 c023      	RJMP _0x2080001
                 _0x2020072:
000386 01de      	MOVW R26,R28
000387 9616      	ADIW R26,6
000388 940e 04dd 	CALL __ADDW2R15
00038a 018d      	MOVW R16,R26
00038b 940e 040a 	CALL SUBOPT_0xA
00038d 83ee      	STD  Y+6,R30
00038e 83ff      	STD  Y+6+1,R31
00038f e0e0      	LDI  R30,LOW(0)
000390 87e8      	STD  Y+8,R30
000391 87e9      	STD  Y+8+1,R30
000392 01de      	MOVW R26,R28
000393 961a      	ADIW R26,10
000394 940e 04dd 	CALL __ADDW2R15
000396 940e 0518 	CALL __GETW1P
000398 93fa      	ST   -Y,R31
000399 93ea      	ST   -Y,R30
00039a 931a      	ST   -Y,R17
00039b 930a      	ST   -Y,R16
00039c e0e6      	LDI  R30,LOW(_put_buff_G101)
00039d e0f2      	LDI  R31,HIGH(_put_buff_G101)
00039e 93fa      	ST   -Y,R31
00039f 93ea      	ST   -Y,R30
0003a0 01de      	MOVW R26,R28
0003a1 961a      	ADIW R26,10
0003a2 dea3      	RCALL __print_G101
0003a3 019f      	MOVW R18,R30
0003a4 81ae      	LDD  R26,Y+6
0003a5 81bf      	LDD  R27,Y+6+1
0003a6 e0e0      	LDI  R30,LOW(0)
0003a7 93ec      	ST   X,R30
0003a8 01f9      	MOVW R30,R18
                 _0x2080001:
0003a9 940e 052e 	CALL __LOADLOCR4
0003ab 962a      	ADIW R28,10
0003ac 90ff      	POP  R15
0003ad 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0003ae 93ba      	ST   -Y,R27
0003af 93aa      	ST   -Y,R26
0003b0 91a9          ld   r26,y+
0003b1 91b9          ld   r27,y+
0003b2 27ee          clr  r30
0003b3 27ff          clr  r31
                 strlen0:
0003b4 916d          ld   r22,x+
0003b5 2366          tst  r22
0003b6 f011          breq strlen1
0003b7 9631          adiw r30,1
0003b8 cffb          rjmp strlen0
                 strlen1:
0003b9 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0003ba 93ba      	ST   -Y,R27
0003bb 93aa      	ST   -Y,R26
0003bc 27aa          clr  r26
0003bd 27bb          clr  r27
0003be 91e9          ld   r30,y+
0003bf 91f9          ld   r31,y+
                 strlenf0:
0003c0 9005      	lpm  r0,z+
0003c1 2000          tst  r0
0003c2 f011          breq strlenf1
0003c3 9611          adiw r26,1
0003c4 cffb          rjmp strlenf0
                 strlenf1:
0003c5 01fd          movw r30,r26
0003c6 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __base_y_G100:
000260           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
                +
0003c7 89aa     +LDD R26 , Y + 18
0003c8 89bb     +LDD R27 , Y + 18 + 1
0003c9 898c     +LDD R24 , Y + 18 + 2
0003ca 899d     +LDD R25 , Y + 18 + 3
                 	__GETD2S 18
0003cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
0003cc 83e8      	ST   Y,R30
0003cd e0e1      	LDI  R30,LOW(1)
0003ce 93ea      	ST   -Y,R30
0003cf e0a1      	LDI  R26,LOW(1)
0003d0 940c 0188 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2:
0003d2 bbe2      	OUT  0x12,R30
0003d3 e2a3      	LDI  R26,LOW(35)
0003d4 e0b0      	LDI  R27,0
0003d5 940c 0411 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
0003d7 940e 017c 	CALL __lcd_write_data
0003d9 e0a3      	LDI  R26,LOW(3)
0003da e0b0      	LDI  R27,0
0003db 940c 0411 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x4:
0003dd e3a0      	LDI  R26,LOW(48)
0003de 940e 0168 	CALL __lcd_write_nibble_G100
                +
0003e0 ec88     +LDI R24 , LOW ( 200 )
0003e1 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0003e2 9701     +SBIW R24 , 1
0003e3 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0003e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x5:
0003e5 932a      	ST   -Y,R18
0003e6 85ad      	LDD  R26,Y+13
0003e7 85be      	LDD  R27,Y+13+1
0003e8 85ef      	LDD  R30,Y+15
0003e9 89f8      	LDD  R31,Y+15+1
0003ea 9509      	ICALL
0003eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6:
0003ec 89e8      	LDD  R30,Y+16
0003ed 89f9      	LDD  R31,Y+16+1
0003ee 9734      	SBIW R30,4
0003ef 8be8      	STD  Y+16,R30
0003f0 8bf9      	STD  Y+16+1,R31
0003f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
0003f2 85ad      	LDD  R26,Y+13
0003f3 85be      	LDD  R27,Y+13+1
0003f4 85ef      	LDD  R30,Y+15
0003f5 89f8      	LDD  R31,Y+15+1
0003f6 9509      	ICALL
0003f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x8:
0003f8 89a8      	LDD  R26,Y+16
0003f9 89b9      	LDD  R27,Y+16+1
0003fa 9614      	ADIW R26,4
0003fb 940e 0518 	CALL __GETW1P
0003fd 83ee      	STD  Y+6,R30
0003fe 83ff      	STD  Y+6+1,R31
0003ff 81ae      	LDD  R26,Y+6
000400 81bf      	LDD  R27,Y+6+1
000401 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x9:
000402 89a8      	LDD  R26,Y+16
000403 89b9      	LDD  R27,Y+16+1
000404 9614      	ADIW R26,4
000405 940e 0518 	CALL __GETW1P
000407 87ea      	STD  Y+10,R30
000408 87fb      	STD  Y+10+1,R31
000409 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
00040a 01de      	MOVW R26,R28
00040b 961c      	ADIW R26,12
00040c 940e 04dd 	CALL __ADDW2R15
00040e 940e 0518 	CALL __GETW1P
000410 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000411 9610      	adiw r26,0
000412 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000413 ed80     +LDI R24 , LOW ( 0x7D0 )
000414 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000415 9701     +SBIW R24 , 1
000416 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000417 95a8      	wdr
000418 9711      	sbiw r26,1
000419 f7c9      	brne __delay_ms0
                 __delay_ms1:
00041a 9508      	ret
                 
                 __ROUND_REPACK:
00041b 2355      	TST  R21
00041c f442      	BRPL __REPACK
00041d 3850      	CPI  R21,0x80
00041e f411      	BRNE __ROUND_REPACK0
00041f ffe0      	SBRS R30,0
000420 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000421 9631      	ADIW R30,1
000422 1f69      	ADC  R22,R25
000423 1f79      	ADC  R23,R25
000424 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000425 e850      	LDI  R21,0x80
000426 2757      	EOR  R21,R23
000427 f411      	BRNE __REPACK0
000428 935f      	PUSH R21
000429 c03c      	RJMP __ZERORES
                 __REPACK0:
00042a 3f5f      	CPI  R21,0xFF
00042b f031      	BREQ __REPACK1
00042c 0f66      	LSL  R22
00042d 0c00      	LSL  R0
00042e 9557      	ROR  R21
00042f 9567      	ROR  R22
000430 2f75      	MOV  R23,R21
000431 9508      	RET
                 __REPACK1:
000432 935f      	PUSH R21
000433 2000      	TST  R0
000434 f00a      	BRMI __REPACK2
000435 c03c      	RJMP __MAXRES
                 __REPACK2:
000436 c035      	RJMP __MINRES
                 
                 __UNPACK:
000437 e850      	LDI  R21,0x80
000438 2e19      	MOV  R1,R25
000439 2215      	AND  R1,R21
00043a 0f88      	LSL  R24
00043b 1f99      	ROL  R25
00043c 2795      	EOR  R25,R21
00043d 0f55      	LSL  R21
00043e 9587      	ROR  R24
                 
                 __UNPACK1:
00043f e850      	LDI  R21,0x80
000440 2e07      	MOV  R0,R23
000441 2205      	AND  R0,R21
000442 0f66      	LSL  R22
000443 1f77      	ROL  R23
000444 2775      	EOR  R23,R21
000445 0f55      	LSL  R21
000446 9567      	ROR  R22
000447 9508      	RET
                 
                 __CDF1U:
000448 9468      	SET
000449 c001      	RJMP __CDF1U0
                 __CDF1:
00044a 94e8      	CLT
                 __CDF1U0:
00044b 9730      	SBIW R30,0
00044c 4060      	SBCI R22,0
00044d 4070      	SBCI R23,0
00044e f0b1      	BREQ __CDF10
00044f 2400      	CLR  R0
000450 f026      	BRTS __CDF11
000451 2377      	TST  R23
000452 f412      	BRPL __CDF11
000453 9400      	COM  R0
000454 d090      	RCALL __ANEGD1
                 __CDF11:
000455 2e17      	MOV  R1,R23
000456 e17e      	LDI  R23,30
000457 2011      	TST  R1
                 __CDF12:
000458 f032      	BRMI __CDF13
000459 957a      	DEC  R23
00045a 0fee      	LSL  R30
00045b 1fff      	ROL  R31
00045c 1f66      	ROL  R22
00045d 1c11      	ROL  R1
00045e cff9      	RJMP __CDF12
                 __CDF13:
00045f 2fef      	MOV  R30,R31
000460 2ff6      	MOV  R31,R22
000461 2d61      	MOV  R22,R1
000462 935f      	PUSH R21
000463 dfc1      	RCALL __REPACK
000464 915f      	POP  R21
                 __CDF10:
000465 9508      	RET
                 
                 __ZERORES:
000466 27ee      	CLR  R30
000467 27ff      	CLR  R31
000468 2766      	CLR  R22
000469 2777      	CLR  R23
00046a 915f      	POP  R21
00046b 9508      	RET
                 
                 __MINRES:
00046c efef      	SER  R30
00046d efff      	SER  R31
00046e e76f      	LDI  R22,0x7F
00046f ef7f      	SER  R23
000470 915f      	POP  R21
000471 9508      	RET
                 
                 __MAXRES:
000472 efef      	SER  R30
000473 efff      	SER  R31
000474 e76f      	LDI  R22,0x7F
000475 e77f      	LDI  R23,0x7F
000476 915f      	POP  R21
000477 9508      	RET
                 
                 __DIVF21:
000478 935f      	PUSH R21
000479 dfbd      	RCALL __UNPACK
00047a 3870      	CPI  R23,0x80
00047b f421      	BRNE __DIVF210
00047c 2011      	TST  R1
                 __DIVF211:
00047d f40a      	BRPL __DIVF219
00047e cfed      	RJMP __MINRES
                 __DIVF219:
00047f cff2      	RJMP __MAXRES
                 __DIVF210:
000480 3890      	CPI  R25,0x80
000481 f409      	BRNE __DIVF218
                 __DIVF217:
000482 cfe3      	RJMP __ZERORES
                 __DIVF218:
000483 2401      	EOR  R0,R1
000484 9408      	SEC
000485 0b97      	SBC  R25,R23
000486 f41b      	BRVC __DIVF216
000487 f3d4      	BRLT __DIVF217
000488 2000      	TST  R0
000489 cff3      	RJMP __DIVF211
                 __DIVF216:
00048a 2f79      	MOV  R23,R25
00048b 931f      	PUSH R17
00048c 932f      	PUSH R18
00048d 933f      	PUSH R19
00048e 934f      	PUSH R20
00048f 2411      	CLR  R1
000490 2711      	CLR  R17
000491 2722      	CLR  R18
000492 2733      	CLR  R19
000493 2744      	CLR  R20
000494 2755      	CLR  R21
000495 e290      	LDI  R25,32
                 __DIVF212:
000496 17ae      	CP   R26,R30
000497 07bf      	CPC  R27,R31
000498 0786      	CPC  R24,R22
000499 0741      	CPC  R20,R17
00049a f030      	BRLO __DIVF213
00049b 1bae      	SUB  R26,R30
00049c 0bbf      	SBC  R27,R31
00049d 0b86      	SBC  R24,R22
00049e 0b41      	SBC  R20,R17
00049f 9408      	SEC
0004a0 c001      	RJMP __DIVF214
                 __DIVF213:
0004a1 9488      	CLC
                 __DIVF214:
0004a2 1f55      	ROL  R21
0004a3 1f22      	ROL  R18
0004a4 1f33      	ROL  R19
0004a5 1c11      	ROL  R1
0004a6 1faa      	ROL  R26
0004a7 1fbb      	ROL  R27
0004a8 1f88      	ROL  R24
0004a9 1f44      	ROL  R20
0004aa 959a      	DEC  R25
0004ab f751      	BRNE __DIVF212
0004ac 01f9      	MOVW R30,R18
0004ad 2d61      	MOV  R22,R1
0004ae 914f      	POP  R20
0004af 913f      	POP  R19
0004b0 912f      	POP  R18
0004b1 911f      	POP  R17
0004b2 2366      	TST  R22
0004b3 f032      	BRMI __DIVF215
0004b4 0f55      	LSL  R21
0004b5 1fee      	ROL  R30
0004b6 1fff      	ROL  R31
0004b7 1f66      	ROL  R22
0004b8 957a      	DEC  R23
0004b9 f243      	BRVS __DIVF217
                 __DIVF215:
0004ba df60      	RCALL __ROUND_REPACK
0004bb 915f      	POP  R21
0004bc 9508      	RET
                 
                 __CMPF12:
0004bd 2399      	TST  R25
0004be f09a      	BRMI __CMPF120
0004bf 2377      	TST  R23
0004c0 f042      	BRMI __CMPF121
0004c1 1797      	CP   R25,R23
0004c2 f048      	BRLO __CMPF122
0004c3 f429      	BRNE __CMPF121
0004c4 17ae      	CP   R26,R30
0004c5 07bf      	CPC  R27,R31
0004c6 0786      	CPC  R24,R22
0004c7 f020      	BRLO __CMPF122
0004c8 f031      	BREQ __CMPF123
                 __CMPF121:
0004c9 9498      	CLZ
0004ca 9488      	CLC
0004cb 9508      	RET
                 __CMPF122:
0004cc 9498      	CLZ
0004cd 9408      	SEC
0004ce 9508      	RET
                 __CMPF123:
0004cf 9418      	SEZ
0004d0 9488      	CLC
0004d1 9508      	RET
                 __CMPF120:
0004d2 2377      	TST  R23
0004d3 f7c2      	BRPL __CMPF122
0004d4 1797      	CP   R25,R23
0004d5 f398      	BRLO __CMPF121
0004d6 f7a9      	BRNE __CMPF122
0004d7 17ea      	CP   R30,R26
0004d8 07fb      	CPC  R31,R27
0004d9 0768      	CPC  R22,R24
0004da f388      	BRLO __CMPF122
0004db f399      	BREQ __CMPF123
0004dc cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0004dd 2400      	CLR  R0
0004de 0daf      	ADD  R26,R15
0004df 1db0      	ADC  R27,R0
0004e0 9508      	RET
                 
                 __ANEGW1:
0004e1 95f1      	NEG  R31
0004e2 95e1      	NEG  R30
0004e3 40f0      	SBCI R31,0
0004e4 9508      	RET
                 
                 __ANEGD1:
0004e5 95f0      	COM  R31
0004e6 9560      	COM  R22
0004e7 9570      	COM  R23
0004e8 95e1      	NEG  R30
0004e9 4fff      	SBCI R31,-1
0004ea 4f6f      	SBCI R22,-1
0004eb 4f7f      	SBCI R23,-1
0004ec 9508      	RET
                 
                 __CWD1:
0004ed 2f6f      	MOV  R22,R31
0004ee 0f66      	ADD  R22,R22
0004ef 0b66      	SBC  R22,R22
0004f0 2f76      	MOV  R23,R22
0004f1 9508      	RET
                 
                 __DIVW21U:
0004f2 2400      	CLR  R0
0004f3 2411      	CLR  R1
0004f4 e190      	LDI  R25,16
                 __DIVW21U1:
0004f5 0faa      	LSL  R26
0004f6 1fbb      	ROL  R27
0004f7 1c00      	ROL  R0
0004f8 1c11      	ROL  R1
0004f9 1a0e      	SUB  R0,R30
0004fa 0a1f      	SBC  R1,R31
0004fb f418      	BRCC __DIVW21U2
0004fc 0e0e      	ADD  R0,R30
0004fd 1e1f      	ADC  R1,R31
0004fe c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0004ff 60a1      	SBR  R26,1
                 __DIVW21U3:
000500 959a      	DEC  R25
000501 f799      	BRNE __DIVW21U1
000502 01fd      	MOVW R30,R26
000503 01d0      	MOVW R26,R0
000504 9508      	RET
                 
                 __DIVW21:
000505 d004      	RCALL __CHKSIGNW
000506 dfeb      	RCALL __DIVW21U
000507 f40e      	BRTC __DIVW211
000508 dfd8      	RCALL __ANEGW1
                 __DIVW211:
000509 9508      	RET
                 
                 __CHKSIGNW:
00050a 94e8      	CLT
00050b fff7      	SBRS R31,7
00050c c002      	RJMP __CHKSW1
00050d dfd3      	RCALL __ANEGW1
00050e 9468      	SET
                 __CHKSW1:
00050f ffb7      	SBRS R27,7
000510 c006      	RJMP __CHKSW2
000511 95a0      	COM  R26
000512 95b0      	COM  R27
000513 9611      	ADIW R26,1
000514 f800      	BLD  R0,0
000515 9403      	INC  R0
000516 fa00      	BST  R0,0
                 __CHKSW2:
000517 9508      	RET
                 
                 __GETW1P:
000518 91ed      	LD   R30,X+
000519 91fc      	LD   R31,X
00051a 9711      	SBIW R26,1
00051b 9508      	RET
                 
                 __GETW1PF:
00051c 9005      	LPM  R0,Z+
00051d 91f4      	LPM  R31,Z
00051e 2de0      	MOV  R30,R0
00051f 9508      	RET
                 
                 __PUTPARD1:
000520 937a      	ST   -Y,R23
000521 936a      	ST   -Y,R22
000522 93fa      	ST   -Y,R31
000523 93ea      	ST   -Y,R30
000524 9508      	RET
                 
                 __SAVELOCR6:
000525 935a      	ST   -Y,R21
                 __SAVELOCR5:
000526 934a      	ST   -Y,R20
                 __SAVELOCR4:
000527 933a      	ST   -Y,R19
                 __SAVELOCR3:
000528 932a      	ST   -Y,R18
                 __SAVELOCR2:
000529 931a      	ST   -Y,R17
00052a 930a      	ST   -Y,R16
00052b 9508      	RET
                 
                 __LOADLOCR6:
00052c 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00052d 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00052e 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00052f 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000530 8119      	LDD  R17,Y+1
000531 8108      	LD   R16,Y
000532 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  27 r1 :  16 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  37 r17:  35 r18:  37 r19:  14 r20:  17 r21:  45 r22:  40 r23:  33 
r24:  34 r25:  21 r26: 138 r27:  51 r28:  17 r29:   1 r30: 235 r31:  87 
x  :  23 y  : 209 z  :  16 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   5 add   :   6 
adiw  :  29 and   :   2 andi  :   6 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   3 brcs  :   0 break :   0 breq  :  26 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  15 
brlt  :   1 brmi  :   6 brne  :  47 brpl  :   5 brsh  :   2 brtc  :   1 
brts  :   1 brvc  :   1 brvs  :   2 bset  :   0 bst   :   1 call  :  71 
cbi   :   5 cbr   :   0 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  20 cls   :   0 clt   :   2 clv   :   0 clz   :   2 com   :   6 
cp    :   9 cpc   :  10 cpi   :  49 cpse  :   0 dec   :  10 des   :   0 
eor   :   4 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   4 inc   :   3 jmp   :  25 ld    :  32 ldd   :  93 ldi   : 155 
lds   :   0 lpm   :  16 lsl   :   9 lsr   :   0 mov   :  30 movw  :  23 
mul   :   1 muls  :   0 mulsu :   0 neg   :   3 nop   :   0 or    :   1 
ori   :   7 out   :  19 pop   :  10 push  :   9 rcall :  33 ret   :  40 
reti  :   0 rjmp  :  91 rol   :  19 ror   :   4 sbc   :   7 sbci  :   8 
sbi   :   7 sbic  :   0 sbis  :   1 sbiw  :  22 sbr   :   1 sbrc  :   2 
sbrs  :  13 sec   :   3 seh   :   0 sei   :   0 sen   :   0 ser   :   5 
ses   :   0 set   :   2 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  69 std   :  41 sts   :   2 sub   :   3 subi  :  17 swap  :   1 
tst   :  14 wdr   :   1 
Instructions used: 76 out of 116 (65.5%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000a66   2594     68   2662   32768   8.1%
[.dseg] 0x000060 0x000264      0      4      4    2048   0.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 3 warnings
